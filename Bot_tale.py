'''–ú–æ—â–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–∫–∞–∑–æ–∫'''

import os
import asyncio
import aiohttp
import json
import csv
import datetime
from pathlib import Path
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from dotenv import load_dotenv
from aiohttp import ClientTimeout
from speechkit import init_tts_manager

load_dotenv()

#–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
DEEPSEEK_API_KEY = os.getenv("DEEPSEEK_API_KEY")
DEEPSEEK_API_URL = "https://api.deepseek.com/v1/chat/completions"

#–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º–∞—É—Ç–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
TIMEOUT = ClientTimeout(total=30)		#30 —Å–µ–∫

bot=Bot(token=TELEGRAM_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

'''–•—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'''
user_data = {}

#–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ data –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
DATA_DIR = "/bot/data"
os.makedirs(DATA_DIR, exist_ok=True)

"""++++++++++++++–°–¢–ê–¢–ò–°–¢–ò–ö–ê++++++++++++++"""
STATS_FILE = os.path.join(DATA_DIR,"user_stats.csv")
TALE_STATS_FILE = os.path.join(DATA_DIR,"tale_stats.csv")

AGE_GROUP_NAMES = {"1":"1-2 –≥–æ–¥–∞",
   		   "2":"3-5 –ª–µ—Ç",
   		   "3":"6-8 –ª–µ—Ç"}

#–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
def init_stats_files():			
   
   #–§–∞–π–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
   if not Path(STATS_FILE).exists():			#–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª –∏–ª–∏ –Ω–µ—Ç
      with open(STATS_FILE, 'w', newline = '', encoding = 'utf-8') as f:
         writer = csv.writer(f)				#–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω
         
         writer.writerow(['user_id', 'username','first_name', 'last_name',
		 'first_seen', 'last_seen', 'tales_generated'])	#–ó–∞–ø–∏—Å–∞—Ç—å —Å—Ç—Ä–æ–∫—É –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤

   #–§–∞–π–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∫–∞–∑–æ–∫
   if not Path(TALE_STATS_FILE).exists():		#–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª –∏–ª–∏ –Ω–µ—Ç
      with open(TALE_STATS_FILE, 'w', newline = '', encoding = 'utf-8') as f:
         writer = csv.writer(f)				#–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω

         writer.writerow(['timestamp', 'user_id', 'age_group',
		 'genre', 'style','location', 'hero',
		 'enemy', 'child_name', 'gender',
		 'audio_requested', 'voice_type'])	#–ó–∞–ø–∏—Å–∞—Ç—å —Å—Ç—Ä–æ–∫—É –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
		 
#–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def update_user_stats(user: types.User):
   user_id = user.id
   username = user.username or "N/A"
   first_name = user.first_name or "N/A"
   last_name = user.last_name or "N/A"
   current_time = datetime.datetime.now().isoformat()	#–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞—Ç—ã –∏ –ø—Ä–µ–æ-–µ –≤ —Å—Ç—Ä–æ–∫—É

   #–ß–∏—Ç–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
   users = {}
   if Path(STATS_FILE).exists():
      with open(STATS_FILE, 'r', newline = '', encoding = 'utf-8') as f:
         reader = csv.DictReader(f)	#DictReader –∏—Å–ø-–µ—Ç 1-—é —Å—Ç—Ä–æ–∫—É —Ñ-–ª–∞, –∫–∞–∫ –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤
         for row in reader:		#–ü—Ä–æ–π—Ç–∏ –ø–æ —Å—Ç—Ä–æ–∫–∞–º
            users[row['user_id']] = row	#–°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ª–æ–≤–∞—Ä—å users

   #–û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   if str(user_id) in users:
      users[str(user_id)]['last_seen'] = current_time
      users[str(user_id)]['tales_generated'] = str(int(users
      [str(user_id)].get('tales_generated', 0)) + 1)
   else:
      users[str(user_id)] = {'user_id': str(user_id),
      			'username': username,
      			'first_name': first_name,
      			'last_name': last_name,
      			'first_seen': current_time,
      			'last_seen': current_time,
      			'tales_generated': '1'}
      			
   #–ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
   with open(STATS_FILE, 'w', newline = '', encoding = 'utf-8') as f:
      writer = csv.DictWriter(f, fieldnames = 
      		['user_id', 'username', 'first_name',
      		 'last_name', 'first_seen', 'last_seen',
      		 'tales_generated'])
      writer.writeheader()
      for user_data in users.values():
         writer.writerow(user_data)
         
#–ó–∞–ø–∏—Å—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∫–∞–∑–∫–∏
def log_tale_generation(user_id, tale_data):
   timestamp = datetime.datetime.now().isoformat()	#–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫. –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
   audio_requested = "yes" if tale_data.get("audio_requested") else "no"
   voice_type = tale_data.get("voice_type", "N/A")
   
   with open(TALE_STATS_FILE, 'a', newline = '', encoding='utf-8') as f:
      writer = csv.writer(f)			#—Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ writer –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª
      writer.writerow([timestamp, user_id, 		#–í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–∫–∞–∑–∫–∏, id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      			 tale_data.get('age', 'N/A'),	#–í–æ–∑—Ä–∞—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞
      			 tale_data.get('genre', 'N/A'),	
      			 tale_data.get('style', 'N/A'),
      			 tale_data.get('location', 'N/A'),
      			 tale_data.get('hero', 'N/A'),
      			 tale_data.get('enemy', 'N/A'),
      			 tale_data.get('child_name', 'N/A'),
      			 tale_data.get('gender', 'N/A'),
      			 audio_requested,
      			 voice_type])
      			 	
#–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–¢–û–õ–¨–ö–û –î–õ–Ø –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê!!!)
ADMIN_IDS = [691555291]

@dp.message(Command("stats"))
async def command_stats(message: Message):
   if message.from_user.id not in ADMIN_IDS:
      await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —ç—Ç–∏—Ö –¥–∞–Ω–Ω—ã—Ö.")
      return
      
   #–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
   total_users = 0
   total_tales = 0
   
   if Path(STATS_FILE).exists():		#–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
      with open(STATS_FILE, 'r', newline = '', encoding='utf-8') as f:
         reader = csv.DictReader(f)	#DictReader –∏—Å–ø-–µ—Ç 1-—é —Å—Ç—Ä–æ–∫—É —Ñ-–ª–∞, –∫–∞–∫ –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤
         for row in reader:		#–ü—Ä–æ–π—Ç–∏ –ø–æ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ (–∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é)
            total_users +=1		#–£–≤–µ–ª–∏-–µ —Å—á–µ—Ç—á–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ 1 –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏
            total_tales += int(row.get('tales_generated', 0))	#–î–æ–±–∞–≤–ª–µ-–µ –∫–æ–ª-–≤–∞ —Å–∫–∞–∑–æ–∫ —ç—Ç–æ–≥–æ
            							# –ø–æ–ª—å–∑–æ-–ª—è –∫ –æ–±—â–µ–º—É —Å—á–µ—Ç—á–∏–∫—É
               
   #–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–∫–∞–∑–∫–∞–º
   age_stats = {}
   genre_stats = {}
   
   if Path(TALE_STATS_FILE).exists():
      with open(TALE_STATS_FILE, 'r', newline = '', encoding='utf-8') as f:
         reader = csv.DictReader(f)
         for row in reader:
            age = row.get('age_group', 'N/A')
            genre = row.get('genre', 'N/A')
            age_stats[age] = age_stats.get(age, 0) + 1
            genre_stats[genre] = genre_stats.get(genre, 0) + 1
               
   #–§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
   report = f"""
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:\n
üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}
üìñ –í—Å–µ–≥–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å–∫–∞–∑–æ–∫: {total_tales}
\n–í–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –≥—Ä—É–ø–ø—ã:\n"""
   for age_key in sorted(age_stats.keys()):
      count = age_stats[age_key]
      age_name = AGE_GROUP_NAMES.get(age_key)
      report += f" ‚Ä¢ {age_name}: {count}\n"
   report += "\n–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∂–∞–Ω—Ä—ã:\n"
   for genre, count in list(sorted(genre_stats.items(),
   key = lambda x: x[1], reverse = True))[:5]:
      report += f" ‚Ä¢ {genre}: {count}\n"
      
   await message.answer(report)
      
      
'''–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —à–∞–≥–æ–≤'''
def get_age_keyboard():							#–ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞
   buttons = [[KeyboardButton(text ="1-2 –≥–æ–¥–∞"),
   	     KeyboardButton(text = "3-5 –ª–µ—Ç")],
   	     [KeyboardButton(text = "6-8 –ª–µ—Ç")]]
   return ReplyKeyboardMarkup(keyboard = buttons, resize_keyboard = True)

def get_genre_keyboard():						#–ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∂–∞–Ω—Ä–∞
   buttons = [[KeyboardButton(text ="–≤–æ–ª—à–µ–±–Ω–∞—è —Å–∫–∞–∑–∫–∞"),
   	     KeyboardButton(text = "—Å–∫–∞–∑–∫–∞ –æ –∂–∏–≤–æ—Ç–Ω—ã—Ö")],
   	     [KeyboardButton(text ="–±—ã—Ç–æ–≤–∞—è —Å–∫–∞–∑–∫–∞"),
   	     KeyboardButton(text = "—Å–∫–∞–∑–∫–∞-–ø—Ä–∏—Ç—á–∞")],
   	     [KeyboardButton(text ="—Å—Ç—Ä–∞—à–Ω–∞—è/–≥–æ—Ç–∏—á–µ—Å–∫–∞—è"),
   	     KeyboardButton(text = "–ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è")],
   	     [KeyboardButton(text ="–¥–µ—Ç–µ–∫—Ç–∏–≤"),
   	     KeyboardButton(text = "–∫–æ–º–µ–¥–∏—è")],
   	     [KeyboardButton(text ="–¥—Ä–∞–º–∞"),
   	     KeyboardButton(text = "–ø–æ—É—á–∏—Ç–µ–ª—å–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è")],
   	     [KeyboardButton(text ="—Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞"),
   	     KeyboardButton(text = "–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è")],]
   return ReplyKeyboardMarkup(keyboard = buttons, resize_keyboard = True)

def get_style_keyboard():						#–ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç–∏–ª—è
   buttons = [[KeyboardButton(text ="–Ω–∞—Ä–æ–¥–Ω—ã–π/—Ñ–æ–ª—å–∫–ª–æ—Ä–Ω—ã–π"),
   	     KeyboardButton(text = "–ª–∏—Ä–∏—á–µ—Å–∫–∏–π/–ø–æ—ç—Ç–∏—á–µ—Å–∫–∏–π")],
   	     [KeyboardButton(text ="—Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π/–∑–∞–≥–∞–¥–æ—á–Ω—ã–π"),
   	     KeyboardButton(text = "—É—é—Ç–Ω—ã–π")],
   	     [KeyboardButton(text ="—é–º–æ—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π"),
   	     KeyboardButton(text = "–ø—Ä–∏–∫–ª—é—á–µ–Ω—á–µ—Å–∫–∏–π")],
   	     [KeyboardButton(text ="—ç–ø–∏—á–µ—Å–∫–∏–π/–≥–µ—Ä–æ–∏—á–µ—Å–∫–∏–π"),
   	     KeyboardButton(text = "—Ç–µ–º–Ω—ã–π/–≥–æ—Ç–∏—á–µ—Å–∫–∏–π")],
   	     [KeyboardButton(text ="–≤–æ—Å—Ç–æ—á–Ω—ã–π"),
   	     KeyboardButton(text = "—Å–∫–∞–Ω–¥–∏–Ω–∞–≤—Å–∫–∏–π")]]
   return ReplyKeyboardMarkup(keyboard = buttons, resize_keyboard = True)

init_stats_files()		#–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ

def get_gender_keyboard():						#–ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞ —Ä–µ–±–µ–Ω–∫–∞
   buttons = [[KeyboardButton(text ="–º–∞–ª—å—á–∏–∫"),
   	     KeyboardButton(text = "–¥–µ–≤–æ—á–∫–∞")]]
   return ReplyKeyboardMarkup(keyboard = buttons, resize_keyboard = True)

def get_audio_keyboard():						#–ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–∑–≤—É—á–∫–∏
   buttons = [[KeyboardButton(text ="–î–∞, —Ö–æ—á—É –æ–∑–≤—É—á–∏—Ç—å —Å–∫–∞–∑–∫—É"),
   	     KeyboardButton(text = "–ù–µ—Ç, –º–Ω–µ –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç")]]
   return ReplyKeyboardMarkup(keyboard = buttons, resize_keyboard = True)
   
def get_voice_keyboard():						#–ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–æ–ª–æ—Å–∞
   buttons = [[KeyboardButton(text ="–ñ–µ–Ω—Å–∫–∏–π –≥–æ–ª–æ—Å"),
   	     KeyboardButton(text = "–ú—É–∂—Å–∫–æ–π –≥–æ–ª–æ—Å")]]
   return ReplyKeyboardMarkup(keyboard = buttons, resize_keyboard = True)


'''–Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã –∏ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö'''
@dp.message(Command("start"))
async def command_start(message:Message):
#–°–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º –Ω–æ–≤–æ–º —Å—Ç–∞—Ä—Ç–µ
   user_data[message.from_user.id] = {"step": "age"}
   
   update_user_stats(message.from_user)	#–û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ

   await message.answer("<b><i>–ü—Ä–∏–≤–µ—Ç, –¥–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥!</i></b>\n\n–Ø —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Å–æ—á–∏–Ω–∏—Ç–µ–ª—å —Å–∫–∞–∑–æ–∫ üìö," 
   		" —Å–æ–∑–¥–∞–º —Å–∫–∞–∑–∫—É –ø–æ —Ç–≤–æ–µ–º—É –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—é ü´∂.\n\n"
		"–î–ª—è –∫–∞–∫–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ –±—É–¥–µ–º –ø–∏—Å–∞—Ç—å? ‚úçÔ∏è", 
		reply_markup = get_age_keyboard())
		
@dp.message()
async def process_inform(message:Message):
   user_id = message.from_user.id
#–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –Ω–∞—á–∞—Ç—å —Å –∫–æ–º–∞–Ω–¥—ã /start
   if user_id not in user_data:
      await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ <b>/start</b>, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ —Å–∫–∞–∑–∫–∏.",
      reply_markup = ReplyKeyboardRemove())
      return
   current_step = user_data[user_id].get("step")
   
   #–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –≤–æ–∑—Ä–∞—Å—Ç–∞
   if current_step == "age":
      age_mapping = {"1-2 –≥–æ–¥–∞":"1",
   		     "3-5 –ª–µ—Ç":"2",
   		     "6-8 –ª–µ—Ç":"3"}
      if message.text in age_mapping:
         user_data[user_id] = {"age": age_mapping[message.text], "step": "genre"}
         await message.answer("<b><i>–û—Ç–ª–∏—á–Ω–æ! –ù–∞—á–∞–ª–æ –ø–æ–ª–æ–∂–µ–Ω–æ!</i></b>\n\n"
         		      "–í—ã–±–µ—Ä–∏ –∂–∞–Ω—Ä –∞–≤—Ç–æ—Ä—Å–∫–æ–π —Å–∫–∞–∑–∫–∏ "
          		      "–∏–ª–∏ –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä: –≥–µ—Ä–æ–∏—á–µ—Å–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è)",
          		      reply_markup = get_genre_keyboard())
      else: await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏ –≤–æ–∑—Ä–∞—Å—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤",
      				reply_markup = get_age_keyboard())

   #–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –∂–∞–Ω—Ä–∞
   elif current_step == "genre":
      user_data[user_id]["genre"] = message.text
      user_data[user_id]["step"] = "style"
      await message.answer("<b><i>–£–∫–∞–∂–∏ –≤ –∫–∞–∫–æ–º —Å—Ç–∏–ª–µ –±—É–¥–µ–º –ø–∏—Å–∞—Ç—å —Å–∫–∞–∑–∫—É</i></b>üß∏:\n\n"
      			   
      			   "–ò–ª–∏ –º–æ–∂–µ—à—å –ø—Ä–∏–¥—É–º–∞—Ç—å —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç ü§ó",
      			   reply_markup = get_style_keyboard())
   
   #–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —Å—Ç–∏–ª—è
   elif current_step == "style":
      user_data[user_id]["style"] = message.text
      user_data[user_id]["step"] = "location"
      await message.answer("<b><i>–ì–¥–µ –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ?</i></b> üó∫Ô∏è\n\n"
      			 "–ù–∞–ø—Ä–∏–º–µ—Ä:\n"
      			 "‚Ä¢ —Å–∫–∞–∑–æ—á–Ω—ã–π –ª–µ—Å\n‚Ä¢ –¥—Ä—É–≥–∞—è –ø–ª–∞–Ω–µ—Ç–∞\n‚Ä¢ –¥–Ω–æ –æ–∫–µ–∞–Ω–∞\n"
      			 "‚Ä¢ –ø–µ—â–µ—Ä–∞ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–≥–æ —Ç—Ä–æ–ª–ª—è –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ...\n\n"
      			 "<i>–ü—Ä–∏–¥—É–º–∞–π –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –ª–æ–∫–∞—Ü–∏—é üèîÔ∏èüèïÔ∏èüèùÔ∏è –∏–ª–∏ –Ω–∞–ø–∏—à–∏"
      			 " –º–Ω–µ: <b>–ø—Ä–∏–¥—É–º–∞–π —Å–∞–º</b></i>, —è –≤—Å–µ —Å–¥–µ–ª–∞—é", 
      			 reply_markup = ReplyKeyboardRemove())
   
   #–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –º–µ—Å—Ç–æ –¥–µ–π—Å—Ç–≤–∏—è
   elif current_step == "location":
      user_data[user_id]["location"] = message.text
      user_data[user_id]["step"] = "hero"
      await message.answer("<b><i>–ü—Ä–∏–¥—É–º–∞–π –∏–º—è –≥–ª–∞–≤–Ω–æ–≥–æ –≥–µ—Ä–æ—è</i></b> ü¶∏‚Äç‚ôÇÔ∏è\n\n"
      			   "–ù–∞–ø—Ä–∏–º–µ—Ä:\n"
      			   "‚Ä¢ –∫–æ—Ç–µ–Ω–æ–∫-–ø–ª—É—Ç–∏—à–∫–∞\n‚Ä¢ –ø—Ä–∏–Ω—Ü–µ—Å—Å–∞, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –≤–µ—Ä–∏–ª–∞ –≤ –º–∞–≥–∏—é\n"
      			   "‚Ä¢ –≤–µ—á–Ω–æ —Å–º–µ—é—â–∏–π—Å—è –º—ã—à–æ–Ω–æ–∫\n‚Ä¢ –¥–µ–≤–æ—á–∫–∞ –ö–∞—Ç—è –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ...")
	
   #–û–±—Ä–∞–±–∞—Ç–∏–≤–∞–µ–º –∏–º—è –≥–µ—Ä–æ—è
   elif current_step == "hero":
      user_data[user_id]["hero"] = message.text
      user_data[user_id]["step"] = "enemy"
      await message.answer("<b><i>–¢–µ–ø–µ—Ä—å –ø–æ—Ä–∞ –ø—Ä–∏–¥—É–º–∞—Ç—å –∑–ª–æ–¥–µ—è\n" 
      			   "—Å –∫–µ–º –Ω–∞—à –≥–µ—Ä–æ–π –±—É–¥–µ—Ç –±–æ—Ä–æ—Ç—å—Å—è\n"
      			   "–∏–ª–∏ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –æ–Ω –±—É–¥–µ—Ç –ø—Ä–µ–æ–¥–æ–ª–µ–≤–∞—Ç—å. üåã</i></b>\n\n"
      			   "–ù–∞–ø—Ä–∏–º–µ—Ä: '–î—Ä–∞–∫–æ–Ω-–ª–µ–Ω—Ç—è–π' –∏–ª–∏ '–≤—ã—Å–æ—Ö—à–∞—è —Ä–µ–∫–∞.'\n\n"
      			   "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å, —á—Ç–æ–±—ã —ç—Ç–æ —Å–¥–µ–ª–∞–ª —è, –Ω–∞–ø–∏—à–∏: <b><i>–ø—Ä–∏–¥—É–º–∞–π —Å–∞–º</i></b>")
   
   #–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–ª–æ–¥–µ—è/–ø—Ä–æ–±–ª–µ–º—É
   elif current_step == "enemy":
      user_data[user_id]["enemy"] = message.text
      user_data[user_id]["step"] = "child_name"
      await message.answer("<b><i>–ö–∞–∫ –∑–æ–≤—É—Ç —Ä–µ–±–µ–Ω–∫–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–∏—à–µ–º —Å–∫–∞–∑–∫—É? üë∂</i></b>")	
	
   #–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–º—è —Ä–µ–±–µ–Ω–∫–∞
   elif current_step == "child_name":
      user_data[user_id]["child_name"] = message.text
      user_data[user_id]["step"] = "gender"
      await message.answer("<b><i>–£–∫–∞–∂–∏ –ø–æ–ª —Ä–µ–±–µ–Ω–∫–∞ üë¶üëß</i></b>", 
      reply_markup = get_gender_keyboard())
  
   #–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª —Ä–µ–±–µ–Ω–∫–∞
   elif current_step == "gender":
      if message.text in ["–º–∞–ª—å—á–∏–∫", "–¥–µ–≤–æ—á–∫–∞"]:
         user_data[user_id]["gender"] = message.text
         user_data[user_id]["step"] = "audio_choice"
         await message.answer("<b><i>–û—Ç–ª–∏—á–Ω–æ! –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω—ã.\nüîÆ–ì–µ–Ω–µ—Ä–∏—Ä—É—é —Å–∫–∞–∑–∫—ÉüîÆ</i></b>", 
            reply_markup=ReplyKeyboardRemove())
        
         #–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–∫–∞–∑–∫—É
         story = await generate_story(user_data[user_id])
         user_data[user_id]["generated_story"] = story		#–°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–∫–∞–∑–∫—É
         
         #–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –≤–µ—Ä—Å–∏—é –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –æ–∑–≤—É—á–∫—É
         await message.answer(story)				#–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –≤–µ—Ä—Å–∏—é —Å–∫–∞–∑–∫–∏
         await message.answer("üéß <b>–•–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –æ–∑–≤—É—á–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é —ç—Ç–æ–π —Å–∫–∞–∑–∫–∏?</b>",
            reply_markup = get_audio_keyboard()) 
         
      else: 
         await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏ –ø–æ–ª —Ä–µ–±–µ–Ω–∫–∞ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤", 
                          reply_markup=get_gender_keyboard())
   
   #–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –æ–∑–≤—É—á–∫–∏
   elif current_step == "audio_choice":
      if message.text == "–î–∞, —Ö–æ—á—É –æ–∑–≤—É—á–∏—Ç—å —Å–∫–∞–∑–∫—É":
         #–í—ã–±–∏—Ä–∞–µ–º –≥–æ–ª–æ—Å
         user_data[user_id]["step"] = "voice_choice"
         await message.answer("<b><i>–í—ã–±–µ—Ä–∏ –≥–æ–ª–æ—Å –¥–ª—è –æ–∑–≤—É—á–∫–∏ —Å–∫–∞–∑–∫–∏ </i></b>üéô",
            reply_markup=get_voice_keyboard())
      
      elif message.text == "–ù–µ—Ç, –º–Ω–µ –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç":
         await message.answer("<b><i>–•–æ—Ä–æ—à–µ–≥–æ —á—Ç–µ–Ω–∏—è! –ï—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å, –Ω–æ–≤—É—é —Å–∫–∞–∑–∫—É - –Ω–∞–ø–∏—à–∏ /start</i></b>",
            reply_markup=ReplyKeyboardRemove())
                 
         #–õ–æ–≥–∏—Ä—É–µ–º –∏ –æ—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
         log_tale_generation(user_id, user_data[user_id])
         del user_data[user_id]
      else:
         await message.answer("<b><i>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤</i></b>",
            reply_markup=get_audio_keyboard())
   
   #–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –≥–æ–ª–æ—Å–∞
   elif current_step == "voice_choice":
      if message.text in ["–ñ–µ–Ω—Å–∫–∏–π –≥–æ–ª–æ—Å", "–ú—É–∂—Å–∫–æ–π –≥–æ–ª–æ—Å"]:
         #–û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –≥–æ–ª–æ—Å–∞
         voice_type = "–∂–µ–Ω—Å–∫–∏–π" if "–ñ–µ–Ω—Å–∫–∏–π" in message.text else "–º—É–∂—Å–∫–æ–π"
         user_data[user_id]["voice_type"] = voice_type
         user_data[user_id]["audio_requested"] = True
         await message.answer(f"üéß <b><i>–°–æ–∑–¥–∞—é –∞—É–¥–∏–æ–≤–µ—Ä—Å–∏—é —Å–∫–∞–∑–∫–∏({voice_type} –≥–æ–ª–æ—Å)...</i></b>",
         reply_markup=ReplyKeyboardRemove())
   
         try:
            #–ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Å–∫–∞–∑–∫—É
            story_text = user_data[user_id].get("generated_story", "")
            
            #–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é TTS –º–µ–Ω–µ–¥–∂–µ—Ä–∞
            if not tts_manager:
               await message.answer("‚ö†Ô∏è <b><i>–°–µ—Ä–≤–∏—Å –æ–∑–≤—É—á–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</i></b>")
               
               #–õ–æ–≥–∏—Ä—É–µ–º –∏ –æ—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
               log_tale_generation(user_id, user_data[user_id])
               del user_data[user_id]
               return
            
            if story_text:
               #–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞—É–¥–∏–æ —Å –≤—ã–±–æ—Ä–æ–º –≥–æ–ª–æ—Å–∞
               audio_file = await tts_manager_instance.text_to_speech(text = story_text.strip(),
               						     voice_type = voice_type,
               						     emotion = "good")
               #–°–æ–∑–¥–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞
               hero_name = user_data[user_id].get('hero', '—Å–∫–∞–∑–∫–∞').replace(' ', '_')[:20]	#–û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
               filename = f"{hero_name}_—Å–∫–∞–∑–∫–∞.mp3"
               
               #–ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ BytesIO
               audio_data = audio_file.getvalue()
               
               #–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: Telegram –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç 50MB)
               if len(audio_data) > 50 * 1024 *1024:
                  await message.answer("‚ö†Ô∏è <b><i>–ê—É–¥–∏–æ—Ñ–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏</i></b>")
               
               else:
                  #–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
                  try:
                     await message.answer_audio(audio = types.BufferedInputFile(audio_data,
               								  filename = filename),
               								  title = f"–°–∫–∞–∑–∫–∞ –ø—Ä–æ {user_data[user_id].get('hero', '–≥–µ—Ä–æ—è')}",
               								  performer = "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–∫–∞–∑–æ–∫",
               								  caption = f"–ê—É–¥–∏–æ–≤–µ—Ä—Å–∏—è ({voice_type} –≥–æ–ª–æ—Å)")
                     await message.answer("‚úÖ <b><i>–ê—É–¥–∏–æ–≤–µ—Ä—Å–∏—è –≥–æ—Ç–æ–≤–∞! –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è!</i></b>")
         
                  except Exception as send_error:
                     print(f"Audio sending error: {send_error}")
                     await message.answer("‚ö†Ô∏è <b><i>–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞—É–¥–∏–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</i></b>!")      
            else:
               await message.answer("‚ö†Ô∏è <b><i>–¢–µ–∫—Å—Ç —Å–∫–∞–∑–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω</i></b>!")
         except Exception as e:
            print(f"Audio generation error: {e}")
            await message.answer("‚ö†Ô∏è <b><i>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞—É–¥–∏–æ–≤–µ—Ä—Å–∏–∏</i></b>!")
            
         #–õ–æ–≥–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å–∫–∞–∑–∫–∏ –≤ csv —Ñ–∞–π–ª
         log_tale_generation(user_id, user_data[user_id])
        
         #–û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
         del user_data[user_id]   
      else:
         await message.answer("<b><i>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ —Ç–∏–ø –≥–æ–ª–æ—Å–∞</i></b> üó£",
            reply_markup = get_voice_keyboard())
         return						#–ù–µ –æ—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –≤—ã–±–æ—Ä –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π


'''–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∫–∞–∑–∫–∏'''
async def generate_story(data):
   age_mapping = { "1":"1-2 –≥–æ–¥–∞",
   		   "2":"3-5 –ª–µ—Ç",
   		   "3":"6-8 –ª–µ—Ç"}
   		   
   #–û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–±–∏–≤–∞–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã—Ö –≥—Ä—É–ø–ø
   age_specific_instructions = {"1":"""–î–ª—è –≤–æ–∑—Ä–∞—Å—Ç–∞ 1-2 –≥–æ–¥–∞ —Å–æ–∑–¥–∞–π –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç—É—é —Å–∫–∞–∑–∫—É –≤ —Å—Ç–∏–ª–µ '–ö–æ–ª–æ–±–æ–∫', '–ö—É—Ä–æ—á–∫–∞ –†—è–±–∞', '–†–µ–ø–∫–∞' –∏ –¥—Ä—É–≥–∏—Ö –ø–æ—Ö–æ–∂–∏—Ö —Ä—É—Å—Å–∫–∏—Ö —Å–∫–∞–∑–æ–∫.
   –û—Å–æ–±—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:
   - –ü—Ä–æ—Å—Ç–æ–π —Å—é–∂–µ—Ç —Å –º–∏–Ω–∏–º—É–º–æ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
   - –Ø—Ä–∫–∏–µ, –ø–æ–Ω—è—Ç–Ω—ã–µ –æ–±—Ä–∞–∑—ã
   - –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π happy end
   - –î–æ–±–∞–≤—å —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä—è—Ç—å 
   (–∫–∞–∫ '—è –æ—Ç –¥–µ–¥—É—à–∫–∏ —É—à–µ–ª' –≤ –ö–æ–ª–æ–±–∫–µ –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ)
   - –î–ª–∏–Ω–∞ —Å–∫–∞–∑–∫–∏ 1500 —Å–∏–º–≤–æ–ª–æ–≤. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–æ–±–ª—é–¥–∞–π —ç—Ç—É –¥–ª–∏–Ω—É!""",
   				
"2":"""–î–ª—è –≤–æ–∑—Ä–∞—Å—Ç–∞ 3-5 –ª–µ—Ç:
   - –ü—Ä–æ—Å—Ç—ã–µ, –Ω–æ –±–æ–ª–µ–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
   - –ß–µ—Ç–∫–∏–π —Å—é–∂–µ—Ç —Å –∑–∞–≤—è–∑–∫–æ–π, —Ä–∞–∑–≤–∏—Ç–∏–µ–º –∏ —Ä–∞–∑–≤—è–∑–∫–æ–π
   - –Ø—Ä–∫–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ —Å –ø–æ–Ω—è—Ç–Ω—ã–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏
   - –î–æ–±—Ä—ã–π —é–º–æ—Ä
   - –î–ª–∏–Ω–∞ —Å–∫–∞–∑–∫–∏ 2500 —Å–∏–º–≤–æ–ª–æ–≤. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–æ–±–ª—é–¥–∞–π —ç—Ç—É –¥–ª–∏–Ω—É!""",
   				
"3":"""–î–ª—è –≤–æ–∑—Ä–∞—Å—Ç–∞ 6-8 –ª–µ—Ç:
   - –ë–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–π —Å—é–∂–µ—Ç —Å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–º–∏ –ø–æ–≤–æ—Ä–æ—Ç–∞–º–∏
   - –†–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∏ –º–µ—Å—Ç
   - –ú–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –∏ –∏—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
   - –ü–æ—É—á–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
   - –î–ª–∏–Ω–∞ —Å–∫–∞–∑–∫–∏ 3500 —Å–∏–º–≤–æ–ª–æ–≤. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–æ–±–ª—é–¥–∞–π —ç—Ç—É –¥–ª–∏–Ω—É!"""}
   age_instruction = age_specific_instructions.get(data['age'],"")
   		  
   promt = f"""
–°–æ–∑–¥–∞–π –¥–µ—Ç—Å–∫—É—é —Å–∫–∞–∑–∫—É –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â—É—é –¥–ª—è —Ä–µ–±–µ–Ω–∫–∞ 
{age_mapping.get(data['age'], data['age'])}.
{age_instruction} 
–ñ–∞–Ω—Ä -  {data.get('genre', '–¥–æ–±—Ä—ã–π')}.
–°—Ç–∏–ª—å —Å–∫–∞–∑–∫–∏ - {data.get('style', '–ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è')}.
–ú–µ—Å—Ç–æ –¥–µ–π—Å—Ç–≤–∏—è - {data.get('location', '—Å–∫–∞–∑–æ—á–Ω—ã–π –ª–µ—Å')}.
–ì–ª–∞–≤–Ω—ã–π –≥–µ—Ä–æ–π - {data.get('hero', '–¥–æ–±—Ä—ã–π –º–µ–¥–≤–µ–∂–æ–Ω–æ–∫')}.
–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ - {data.get('enemy', '—Å—Ç—Ä–∞—à–Ω—ã–π –ª–µ–≤')}.
–í—Å—Ç–∞–≤—å –∏–º—è —Ä–µ–±–µ–Ω–∫–∞ {data.get('child_name', '–º–∞–ª—ã—à')} –≤ –∏—Å—Ç–æ—Ä–∏—é.
–ü–æ–ª —Ä–µ–±–µ–Ω–∫–∞ - {data.get('gender')}.
–°–∫–∞–∑–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ—É—á–∏—Ç–µ–ª—å–Ω–æ–π, –¥–æ–±—Ä–æ–π –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π.
–í –∑–∞–≥–æ–ª–æ–≤–∫–µ —É–∫–∞–∂–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∫–∞–∑–∫–∏.
–í–ê–ñ–ù–û: –¥–ª–∏–Ω–∞ —Å–∫–∞–∑–∫–∏ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å 4000 —Å–∏–º–≤–æ–ª–æ–≤!
–í–ê–ñ–ù–û: 
- –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ –∫–∏—Ä–∏–ª–ª–∏—Ü—É (—Ä—É—Å—Å–∫–∏–µ –±—É–∫–≤—ã)!
- –í—ã–≤–æ–¥–∏ —Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Å–∞–º—É —Å–∫–∞–∑–∫—É –±–µ–∑–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤!
- –ù–µ —É–ø–æ–º–∏–Ω–∞—Ç—å –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ–º—ã, –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã, –≤–æ–π–Ω—ã.
- –ù–µ —É–ø–æ–º–∏–Ω–∞—Ç—å –£–∫—Ä–∞–∏–Ω—É, –ª–∏–¥–µ—Ä–∞ –ó–µ–ª–µ–Ω—Å–∫–æ–≥–æ –∏ –≤—Å–µ —á—Ç–æ —Å –Ω–∏–Ω–∏ —Å–≤—è–∑–∞–Ω–æ.
- –ù–µ –∑–∞—Ç—Ä–∞–≥–∏–≤–∞—Ç—å –º–µ–∂–Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã.
- –ù–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å—Ü–µ–Ω –Ω–∞—Å–∏–ª–∏—è, —Å—Ç—Ä–∞—à–Ω—ã—Ö –æ–ø–∏—Å–∞–Ω–∏–π, –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö —ç–º–æ—Ü–∏–π.
- –ù–µ –∑–∞—Ç—Ä–∞–≥–∏–≤–∞—Ç—å —Ä–µ–ª–∏–≥–∏–æ–∑–Ω—ã–µ —Ç–µ–º—ã.
- –ù–µ —É–ø–æ–º–∏–Ω–∞—Ç—å –∞–¥, –ø—Ä–µ–∏—Å–ø–æ–¥–Ω—è—è, –¥—å—è–≤–æ–ª, –ª—é—Ü–µ—Ñ–µ—Ä, –¥–µ–º–æ–Ω, –±–µ—Å –∏ –ª—é–±—ã–µ —Å–∫–ª–æ–Ω—è–µ–º—ã–µ —Å –Ω–∏–º–∏ —Å–ª–æ–≤–∞.
- –°–∫–∞–∑–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∞–±—Å–æ–ª—é—Ç–Ω–æ –∞–ø–æ–ª–∏—Ç–∏—á–Ω–æ–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –¥–ª—è –¥–µ—Ç–µ–π!"""
   
   print(promt)	
   
   #–ó–∞–ø—Ä–æ—Å –∫ API DeepSeek
   headers = {"Content-Type": "application/json",
   		"Authorization": f"Bearer {DEEPSEEK_API_KEY}"}
   #–î–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
   payload = {"model": "deepseek-chat",
   	      "messages": [{"role": "system",
   	      "content": "–¢—ã –¥–µ—Ç—Å–∫–∏–π –ø–∏—Å–∞—Ç–µ–ª—å, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–æ–±—Ä—ã—Ö –ø–æ—É—á–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–∫–∞–∑–æ–∫."},
   	      {"role": "user", "content": promt}],
   	      "temperature": 0.7,
   	      "max_tokens": 4000}
   	      
   #–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ API
   async with aiohttp.ClientSession() as session:
      async with session.post(DEEPSEEK_API_URL, 
      headers = headers, json = payload) as response:
         if response.status == 200:
            result = await response.json()
            story = result["choices"][0]["message"]["content"]
            return story
        
         else:
            error_text = await response.text()
            print(f"–û—à–∏–±–∫–∞ API:{response.status},{error_text}")
           
            #–í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ 
            generated_story = f"""
   **–°–∫–∞–∑–∫–∞ –ø—Ä–æ {data.get('hero', '—Ö—Ä–∞–±—Ä–æ–≥–æ –≥–µ—Ä–æ—è')}**
   
   –ñ–∏–ª –±—ã–ª {data.get('hero', '–¥–æ–±—Ä—ã–π –º–µ–¥–≤–µ–∂–æ–Ω–æ–∫')}.
   –û–¥–Ω–∞–∂–¥—ã —Å–ª—É—á–∏–ª–∞—Å—å –±–µ–¥–∞: 
   {data.get('enemy', '—Å—Ç—Ä–∞—à–Ω—ã–π –ª–µ–≤')} –Ω–∞–ø–∞–ª –Ω–∞ –¥–µ—Ä–µ–≤–Ω—é.
   
   –ú–∞–ª–µ–Ω—å–∫–∏–π {data.get('child_name', '–º–∞–ª—ã—à')} —Ä–µ—à–∏–ª –ø–æ–º–æ—á—å!
   –û–Ω —Å–æ–±—Ä–∞–ª –≤—Å–µ—Ö –∑–≤–µ—Ä–µ–π –≤–º–µ—Å—Ç–µ –∏ –ø–æ–±–µ–¥–∏–ª –∑–ª–æ–¥–µ—è!
   
   **–ú–æ—Ä–∞–ª—å: –¥—Ä—É–∂–±–∞ —Ä–µ—à–∞–µ—Ç –ª—é–±—ã–µ –ø—Ä–æ–±–ª–µ–º—ã!"""
   
            return generated_story
#–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º TTS –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
tts_manager_instance = None
   
async def main():
   try:
      tts_manager_instance = init_tts_manager()			#–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è TTS –º–µ–Ω–µ–¥–∂–µ—Ä–∞ (–ø–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–ø–ª—è—Ä)
      if tts_manager_instance:
         print("‚úÖ Yandex SpeechKit initialized successfully!")
      else:
         print("Yandex SpeechKit initialization failed - check API keys")
   except Exception as e:
      print(f"‚ùå SpeechKit initialization failed: {e}")
      
   print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
   await bot.delete_webhook(drop_pending_updates=True)
   await dp.start_polling(bot)
   
if __name__=="__main__":
   asyncio.run(main())

